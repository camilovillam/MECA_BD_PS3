library(pacman)
p_load(rio,
sf, # Leer, escribir o manipular datos espaciales
leaflet, #Visualizaciones dinámicas
tmaptools, #geocode_OSM()
osmdata,  #Get OSM´s data
doParallel,
#gtsummary,
GGally,
stargazer,
fabricatr,
tableone,
arsenal,
janitor,
tidyverse,
gamlr,
skimr,
caret,
rvest,
stargazer,
smotefamily,
MASS,
ROCR,
pROC,
rpart,
rpart.plot,
glmnet,
xgboost)
setwd("~/GitHub/MECA_BD_PS3")
train_prop <-readRDS("./stores/train.rds") #107.567 Obs
test_prop <-readRDS("./stores/test.rds") #11.150 Obs
train_prop <- train_prop %>% mutate(latp=lat,longp=lon)
train_prop <- st_as_sf(train_prop ,coords=c('longp','latp'),crs=4326)
test_prop <- test_prop %>% mutate(latp=lat,longp=lon)
test_prop <- st_as_sf(test_prop ,coords=c('longp','latp'),crs=4326)
#Base de Medellín
train_med <-subset(train_prop,train_prop$l3 =="Medellín")
test_med <-subset(test_prop,test_prop$l3 =="Medellín")
catastro_med <- read_sf("./stores/Medellín/shp_SECTOR_CATASTRAL/SECTOR_CATASTRAL.shp")
st_crs(catastro_med)
catastro_med <- st_transform(catastro_med,4326)
colnames(catastro_med)
train_med <- st_join(train_med,catastro_med[,c('COMUNA','NOMBRE')])
test_med <- st_join(test_med,catastro_med[,c('COMUNA','NOMBRE')])
barrios_med <- read_sf("./stores/Medellín/shp_BarrioVereda/BarrioVereda_2014.shp")
st_crs(barrios_med)
barrios_med <- st_transform(barrios_med,4326)
colnames(barrios_med)
View(barrios_med)
train_med <- st_join(train_med,barrios_med[,c('CODIGO','NOMBRE')])
test_med <- st_join(test_med,barrios_med[,c('CODIGO','NOMBRE')])
estratos_med <- read_sf("./stores/Medellín/shp_ESTRATIFICACION/ESTRATIFICACION.shp")
st_crs(estratos_med)
estratos_med <- st_transform(estratos_med,4326)
colnames(estratos_med)
estratos_med$geom_err <- st_is_valid(estratos_med, reason = T)
nrow(estratos_med)
table(estratos_med$geom_err)
31972-31671
estratos_med <- st_make_valid(estratos_med)
estratos_med$geom_err <- st_is_valid(estratos_med, reason = T)
nrow(estratos_med)
table(estratos_med$geom_err)
estratos_med <- filter(estratos_med,estratos_med$geom_err == "Valid Geometry")
nrow(estratos_med)
train_med <- st_join(train_med,estratos_med[,c('MANZANA','ESTRATO')])
test_med <- st_join(test_med,estratos_med[,c('MANZANA','ESTRATO')])
colSums(is.na(train_med))
colSums(is.na(test_med))
reg1 <- lm(price ~ COMUNA + CODIGO + ESTRATO,
data=train_med)
stargazer(reg1)
stargazer(reg1,type="text")
reg1 <- lm(price ~ factor(COMUNA) + factor(CODIGO) + factor(ESTRATO),
data=train_med)
stargazer(reg1,type="text")
reg2 <- lm(price ~ factor(ESTRATO),
data=train_med)
stargazer(reg2,type="text")
reg2 <- lm(price ~ surface_total + factor(ESTRATO),
data=train_med)
stargazer(reg2,type="text")
colSums(is.na(train_med))
reg2 <- lm(price ~ bedrooms + factor(ESTRATO),
data=train_med)
stargazer(reg2,type="text")
reg2 <- lm(price ~ bedrooms + bathrooms + factor(ESTRATO),
data=train_med)
reg1 <- lm(price ~ factor(ESTRATO),
data=train_med)
reg2 <- lm(price ~ bedrooms + factor(ESTRATO),
data=train_med)
reg3 <- lm(price ~ bathrooms + bedrooms + factor(ESTRATO),
data=train_med)
reg4 <- lm(price ~ bedrooms + factor(ESTRATO) + factor(NOMBRE.x),
data=train_med)
stargazer(reg1,reg2,reg3,type="text")
reg4 <- lm(price ~ bathrooms + bedrooms + factor(ESTRATO) + surface_total,
data=train_med)
reg5 <- lm(price ~ bathrooms + bedrooms + factor(ESTRATO) + factor(NOMBRE.x) + surface_total,
data=train_med)
stargazer(reg4,reg5,type="text")
usos_med <- read_sf("./stores/Medellín/shp_UsosSueloUrbano/UsosGnalesSueloUrbano.shp")
st_crs(usos_med)
usos_med <- st_transform(usos_med,4326)
usos_med$geom_err <- st_is_valid(usos_med, reason = T)
usos_med <- st_make_valid(usos_med)
usos_med$geom_err <- st_is_valid(usos_med, reason = T)
nrow(usos_med)
table(usos_med$geom_err)
usos_med <- filter(usos_med,usos_med$geom_err == "Valid Geometry")
nrow(usos_med)
colnames(usos_med)
train_med <- st_join(train_med,usos_med[,c("COD_CAT_US","COD_SUBCAT","AREAGRALUS","SUBCATEGOR")])
test_med <- st_join(test_med,usos_med[,c("COD_CAT_US","COD_SUBCAT","AREAGRALUS","SUBCATEGOR")])
colSums(is.na(train_med))
reg6 <- lm(price ~ bathrooms + bedrooms + factor(ESTRATO) + surface_total + factor(AREAGRALUS),
data=train_med)
stargazer(reg4,reg6,type="text")
reg7 <- lm(price ~ bathrooms + bedrooms + factor(ESTRATO) + factor(NOMBRE.x) + surface_total + factor(COD_SUBCAT),
data=train_med)
stargazer(reg5,reg7,type="text")
View(usos_med)
usos_med_csv <- import("./stores/Medellín/UsosGnalesSueloUrbano.csv")
View(usos_med_csv)
View(usos_med)
usos_med_geojson <- read_sf("./stores/Medellín/UsosGnalesSueloUrbano.geojson")
View(usos_med_geojson)
colnames(usos_med_geojson)
colSums(is.na(train_med))
colSums(is.na(test_med))
test_med <- st_join(test_med,usos_med_geojson[,c("COD_CAT_US","COD_SUBCAT","AREAGRALUS","SUBCATEGOR")])
test_med <- st_join(test_med,usos_med_geojson[,c("COD_CAT_USO","COD_SUBCAT_USO","AREAGRALUSO","SUBCATEGORIA")])
st_crs(usos_med_geojson)
usos_med_geojson <- st_transform(usos_med_geojson,4326)
test_med <- st_join(test_med,usos_med_geojson[,c("COD_CAT_USO","COD_SUBCAT_USO","AREAGRALUSO","SUBCATEGORIA")])
usos_med_geojson <- st_transform(usos_med_geojson,6257)
st_crs(usos_med_geojson) #6257
test_med <- st_transform(test_med,6257)
test_med <- st_join(test_med,usos_med_geojson[,c("COD_CAT_USO","COD_SUBCAT_USO","AREAGRALUSO","SUBCATEGORIA")])
usos_med_geojson <- st_make_valid(usos_med_geojson)
#Base de Medellín
train_med <-subset(train_prop,train_prop$l3 =="Medellín")
test_med <-subset(test_prop,test_prop$l3 =="Medellín")
usos_med_geojson <- read_sf("./stores/Medellín/UsosGnalesSueloUrbano.geojson")
usos_med_geojson$geom_err <- st_is_valid(usos_med_geojson, reason = T)
nrow(usos_med)
table(usos_med$geom_err)
test_med <- st_join(test_med,usos_med_geojson[,c("COD_CAT_USO","COD_SUBCAT_USO","AREAGRALUSO","SUBCATEGORIA")])
test_med <- st_transform(test_med,6257)
test_med <- st_join(test_med,usos_med_geojson[,c("COD_CAT_USO","COD_SUBCAT_USO","AREAGRALUSO","SUBCATEGORIA")])
sf::sf_use_s2(FALSE)
test_med$geometry <- test_med$geometry %>%
s2::s2_rebuild() %>%
sf::st_as_sfc()
usos_med_geojson$geometry <- usos_med_geojson$geometry %>%
s2::s2_rebuild() %>%
sf::st_as_sfc()
usos_med_geojson <- st_make_valid(usos_med_geojson)
install.packages("nngeo")
require(nngeo)
manz_med <- read_sf("./stores/Medellín/shp_MGNDANE/MGN_URB_MANZANA.shp")
View(manz_med)
st_crs(manz_med)
colnames(manz_med)
test_med <- st_join(test_med,manz_med[,c('MANZ_CCDGO','MANZ_CCNCT','MANZ_CAG')])
colSums(is.na(test_med))
test_med  <-  st_join(test_med, manz_med, join = st_nn , maxdist = 50 , k = 1 , progress = FALSE)
polygons
polygons
